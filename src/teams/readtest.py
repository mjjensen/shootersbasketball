#!/usr/bin/env python2.7
# encoding: utf-8
'''
readtest -- test reading of teams sqlite3 database

program to test reading of teams sqlite3 database
--
Note: basic program outline generated by PyDev (Eclipse plugin) via New->PyDev
      Module command and the "CLI (optparse)" Module template

@version:    0.1
@created:    2016-04-29
@author:     Murray Jensen
@copyright:  2016 Murray Jensen. All rights reserved.
@license:    Apache License 2.0
@contact:    mjj@jensen-williams.id.au
$Date$
$Author$
$Revision$
'''
from __future__ import print_function

import os
import sys

from sbcilib.teamsdb import SbciTeamsDB, competition_shortname
from sbcilib.utils import SbciMain
from sbcilib.wwc import WWCCheckStatus, wwc_check


class Main(SbciMain):

    def main(self):
        verbose = self.args.verbose

        db = SbciTeamsDB(verbose)

        try:
            for team in db.teams_query.all():
                if team.active != 'true':
                    continue

                if verbose:
                    print('{}, {}: coach {}, asst_coach {}, team manager {}'
                          .format(team.team_name,
                                  competition_shortname(team.competition),
                                  team.coach.name
                                  if team.coach is not None else "None",
                                  team.asst_coach.name
                                  if team.asst_coach is not None else "None",
                                  team.team_manager.name
                                  if team.team_manager is not None else "None"))

                ok_results = (
                    WWCCheckStatus.SUCCESS,
                    WWCCheckStatus.UNDER18,
                    WWCCheckStatus.TEACHER,
                )

                result = wwc_check(team.coach, verbose)
                if result.status not in ok_results:
                    print('WWC check for {} returned: {}'
                          .format(team.coach.name, result.message))

                if team.asst_coach is not None:
                    result = wwc_check(team.asst_coach, verbose)
                    if result.status not in ok_results:
                        print('WWC check for {} returned: {}'
                              .format(team.asst_coach.name, result.message))

                result = wwc_check(team.team_manager, verbose)
                if result.status not in ok_results:
                    print('WWC check for {} returned: {}'
                          .format(team.team_manager.name, result.message))

        except BaseException:
            self.logger.exception('Exception')
            return os.EX_OSERR

        return os.EX_OK


def main():
    '''function suitable for running via setuptools entry point'''
    return Main.setuptools_entry()


if __name__ == '__main__':
    sys.exit(main())
